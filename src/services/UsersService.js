const Device = require('../models/Devices');
const User = require('../models/Users');

module.exports = {
    getAllUsers: ()=>{
        return User.find({})
            .populate('device')
            .exec()
            .then((users)=>{return users})
            .catch((err)=>{
                console.error(err);
                return false;
            })
    },
    /**
    * @param: user id (this could be _id generated by mongoose. But here use the unique userId email is used)
    * */
    getUserById: (id)=>{
        return User.findOne({"userId" : id})
            .populate('device')
            .exec()
            .then((user)=>{
                if(user) return user;
                throw new Error("No user found");
            }).catch((err)=>{
                console.error(err);
                return false;
            })
    },
    editUser : (userId, query)=>{
        if(query.hasOwnProperty("devices")){
            return User.findOneAndUpdate({"userId": userId}, {$set: {device: query.devices}}, {new: true})
                .then(async user => {
                    await Device.update({_id: {$in: query.devices}, user: {$not : {$all: [user._id]}}}, {$push: {user: user._id}});
                    await Device.update({_id: {$nin: query.devices}, user: {$all: [user._id]}}, {$pull: {device: user._id}});
                    return user;
                }).catch((err) => {
                    console.error(err);
                    return false;
                });
        }else{
            return User.findOneAndUpdate({"userId" : userId},{$set : query})
                .then((user)=>{
                    console.log(user);
                    return true;
                }).catch((err)=>{
                    console.error(err);
                    return false;
                });
        }
    },
    deleteUser: (userId)=>{
        return User.findOneAndRemove({"userId" : userId})
            .then((user)=>{
                if(user){
                    return Device.find({owners:{$all : [user.userId]}})
                        .then((devices)=>{
                            if(devices){
                                devices.forEach((device)=>{
                                    device.owners.pop(user._id);
                                    device.save();
                                });
                                return true;
                            }
                        })
                } else {
                    console.warn('Unknown user');
                    return false;
                }
            }).catch((err)=>{
                console.error(err);
                return false;
            });
    }
};
