const User = require('../models/Users');
const Device = require('../models/Devices');

module.exports = {
    getAllUsers: ()=>{
        return User.find({})
            .populate('device')
            .exec()
            .then((users)=>{return users})
            .catch((err)=>{
                console.error(err);
                return false;
            })
    },
    /**
    * @param: user id (this could be _id generated by mongoose. But here use the unique userId email is used)
    * */
    getUserById: (id)=>{
        return User.findOne({"userId" : id})
            .populate('device')
            .exec()
            .then((users)=>{return users})
            .catch((err)=>{
                console.error(err);
                return false;
            })
    },

    signIn : (newUser)=>{
        const _user = new User(newUser);

        return User.create(_user)
            .then(()=>{return true})
            .catch((err)=>{
                if(err.code === 11000){
                    console.warn(err.errmsg);
                    return false;
                }
                else{
                    console.error(err);
                    return false;
                }
            })
    },

    editUser : (userId, body)=>{
        const query = body.hasOwnProperty("devices");
        if(query){
            return User.findOne({"userId": userId})
                .then(async user => {
                    return Device.find({"deviceId": {$in: query.devices}})
                        .then(async devices => {
                            devices.forEach((device) => {
                                if (!user.device.includes(device._id) && !device.user.includes(user._id)) {
                                    user.device.push(device._id);
                                    device.user.push(user._id);
                                    device.save();
                                    user.save();
                                }
                            });
                        })
                        .then(async () => {
                            return User.findOne({"userId": userId})
                                .populate('device')
                                .exec();
                        })
                        .then(user => {
                            return user;
                        })
                        .catch(err => {
                            console.error(err);
                            return false;
                        })
                });
        }else{
            return User.findOneAndUpdate({"userId" : userId},{$set : body})
                .then((user)=>{
                    console.log(user);
                    return true;
                }).catch((err)=>{
                    console.error(err);
                    return false;
                });
        }
    },
    deleteUser: (userId)=>{
        return User.findOneAndRemove({"userId" : userId})
            .then((user)=>{
                if(user){
                    return Device.find({owners:{$all : [user.userId]}})
                        .then((devices)=>{
                            if(devices){
                                devices.forEach((device)=>{
                                    device.owners.pop(user._id);
                                    device.save();
                                });
                                return true;
                            }
                        })
                } else {
                    console.warn('Unknown user');
                    return false;
                }
            }).catch((err)=>{
                console.error(err);
                return false;
            });
    }
};
